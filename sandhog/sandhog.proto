syntax = "proto3";

option go_package = "github.com/selftechio/sandhog/internal/api/sandhog";

package selftechio.sandhog;

// A sandhog peer.
message SandhogPeer {
  string          public_key           = 1;
  repeated string allowed_ips          = 2;
  int32           listen_port          = 3;
  oneof endpoint {
    string endpoint_value = 4;
  }
  oneof persistent_keepalive {
    int32 persistent_keepalive_value = 5;
  }
}

message StartTunnelNegotiationsRequest {
  // each tunnel has its own uuid.
  string tunnel_uuid = 1;
  // each tunnel has its own name.
  string tunnel_name = 2;
}

message StartTunnelNegotiationsResponse {
  // each sandhog will generate a new uuid for each tunnel.
  string sandhog_uuid     = 1;
  // sandhogs will be differentiated by their hostnames, too.
  string sandhog_hostname = 2;
}

service Sandhog {
  // Initiate tunnel negotiations with a sandhog.
  rpc StartTunnelNegotiations(StartTunnelNegotiationsRequest) returns (StartTunnelNegotiationsResponse) {}
}
